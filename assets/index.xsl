<?xml version="1.0" encoding="UTF-8"?>
<!--
 * SPDX-FileCopyrightText: Copyright (c) 2024-2025 Yegor Bugayenko
 * SPDX-License-Identifier: MIT
-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:output method="xml" omit-xml-declaration="yes" encoding="UTF-8" indent="yes"/>
  <xsl:param name="title"/>
  <xsl:param name="date"/>
  <xsl:param name="version"/>
  <xsl:param name="columns"/>
  <xsl:param name="hidden"/>
  <xsl:param name="js_hash"/>
  <xsl:param name="css_hash"/>
  <xsl:template name="javascript">
    <xsl:param name="url" as="string"/>
    <xsl:param name="hash" as="string"/>
    <script type="text/javascript" src="{$url}" integrity="{$hash}" crossorigin="anonymous">
      <xsl:text> </xsl:text>
    </script>
  </xsl:template>
  <xsl:template name="css">
    <xsl:param name="url" as="string"/>
    <xsl:param name="hash" as="string"/>
    <link href="{$url}" rel="stylesheet" integrity="{$hash}" crossorigin="anonymous"/>
  </xsl:template>
  <xsl:template match="/">
    <xsl:text disable-output-escaping='yes'>&lt;!DOCTYPE html&gt;</xsl:text>
    <html>
      <head>
        <meta charset="UTF-8"/>
        <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
        <title>
          <xsl:choose>
            <xsl:when test="$title = ''">
              <xsl:text>factbase</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$title"/>
            </xsl:otherwise>
          </xsl:choose>
        </title>
        <link rel="icon" href="https://www.zerocracy.com/svg/logo.svg" type="image/svg"/>
        <xsl:call-template name="css">
          <xsl:with-param name="url">https://cdn.jsdelivr.net/npm/tacit-css@1.8.1/dist/tacit-css.min.css</xsl:with-param>
          <xsl:with-param name="hash">sha384-JbsYayq5Otme+gjh/pl7NrA/qMIU0bxbdzKvYqQGHvvag0lHhM62TQnDzz+EyzXj</xsl:with-param>
        </xsl:call-template>
        <xsl:call-template name="css">
          <xsl:with-param name="url">https://cdn.jsdelivr.net/npm/drops@0.2.0/dist/drops-0.2.0.min.css</xsl:with-param>
          <xsl:with-param name="hash">sha384-5jl1QSYGvyjnoRf6lIhaq2MlbW/qjOvNay9i434tlxyKPqm+t1ed5vxKgT75C4xe</xsl:with-param>
        </xsl:call-template>
        <xsl:call-template name="css">
          <xsl:with-param name="url">https://yegor256.github.io/judges/assets/index.css</xsl:with-param>
          <xsl:with-param name="hash">
            <xsl:value-of select="$css_hash"/>
          </xsl:with-param>
        </xsl:call-template>
        <xsl:call-template name="javascript">
          <xsl:with-param name="url">https://code.jquery.com/jquery-3.7.1.min.js</xsl:with-param>
          <xsl:with-param name="hash">sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=</xsl:with-param>
        </xsl:call-template>
        <xsl:call-template name="javascript">
          <xsl:with-param name="url">https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.31.3/js/jquery.tablesorter.min.js</xsl:with-param>
          <xsl:with-param name="hash">sha384-+PEWXCk8F17zxsQsEjkuHjUN4yFMHv03eKxKLrqwDql8FJQM0NeSvHRZFVLfXyn7</xsl:with-param>
        </xsl:call-template>
        <xsl:call-template name="javascript">
          <xsl:with-param name="url">https://yegor256.github.io/judges/assets/index.js</xsl:with-param>
          <xsl:with-param name="hash">
            <xsl:value-of select="$js_hash"/>
          </xsl:with-param>
        </xsl:call-template>
      </head>
      <body>
        <section>
          <header>
            <p>
              <a href="https://www.zerocracy.com">
                <img src="https://www.zerocracy.com/svg/logo.svg" alt="Zerocracy"/>
              </a>
            </p>
          </header>
          <article>
            <xsl:apply-templates select="fb"/>
          </article>
          <footer class="smaller">
            <p>
              <xsl:text>The page was generated by the </xsl:text>
              <a href="https://github.com/yegor256/judges">
                <xsl:text>judges</xsl:text>
              </a>
              <xsl:text> tool (</xsl:text>
              <xsl:value-of select="$version"/>
              <xsl:text>) on </xsl:text>
              <xsl:value-of select="$date"/>
              <xsl:text>.</xsl:text>
              <br/>
              <xsl:text>Properties with columns: </xsl:text>
              <xsl:value-of select="$columns"/>
              <br/>
              <xsl:text>Hidden properties: </xsl:text>
              <xsl:value-of select="$hidden"/>
              <br/>
              <a href="https://github.com/yegor256/factbase">
                <xsl:text>Factbase</xsl:text>
              </a>
              <xsl:text>: </xsl:text>
              <xsl:value-of select="count(fb/f)"/>
              <xsl:text> fact</xsl:text>
              <xsl:if test="count(fb/f) != 1">
                <xsl:text>s</xsl:text>
              </xsl:if>
              <xsl:text>, </xsl:text>
              <xsl:value-of select="fb/@size"/>
              <xsl:text> bytes, version </xsl:text>
              <xsl:value-of select="fb/@version"/>
              <xsl:text>.</xsl:text>
              <br/>
              <span id="current-time">Loading current time...</span>
            </p>
          </footer>
        </section>
      </body>
    </html>
  </xsl:template>
  <xsl:template match="fb">
    <table id="facts">
      <colgroup>
        <xsl:call-template name="col">
          <xsl:with-param name="cols" select="$columns"/>
        </xsl:call-template>
      </colgroup>
      <thead>
        <tr>
          <xsl:call-template name="th">
            <xsl:with-param name="cols" select="$columns"/>
          </xsl:call-template>
        </tr>
      </thead>
      <tbody>
        <xsl:apply-templates select="f"/>
      </tbody>
    </table>
  </xsl:template>
  <xsl:template match="f">
    <tr>
      <xsl:call-template name="td">
        <xsl:with-param name="cols" select="$columns"/>
        <xsl:with-param name="f" select="."/>
      </xsl:call-template>
    </tr>
  </xsl:template>
  <xsl:template name="col">
    <xsl:param name="cols"/>
    <xsl:choose>
      <xsl:when test="string-length($cols) &gt; 0">
        <col/>
        <xsl:call-template name="col">
          <xsl:with-param name="cols" select="substring-after($cols, ',')"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <col class="w50"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="th">
    <xsl:param name="cols"/>
    <xsl:choose>
      <xsl:when test="string-length($cols) &gt; 0">
        <th class="sorter">
          <xsl:value-of select="substring-before(concat($cols, ','), ',')"/>
        </th>
        <xsl:call-template name="th">
          <xsl:with-param name="cols" select="substring-after($cols, ',')"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <th>
          <xsl:text> </xsl:text>
        </th>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="td">
    <xsl:param name="cols"/>
    <xsl:param name="f"/>
    <xsl:choose>
      <xsl:when test="string-length($cols) &gt; 0">
        <td>
          <xsl:variable name="c" select="substring-before(concat($cols, ','), ',')"/>
          <xsl:call-template name="value">
            <xsl:with-param name="v" select="$f/*[name()=$c]"/>
          </xsl:call-template>
        </td>
        <xsl:call-template name="td">
          <xsl:with-param name="cols" select="substring-after($cols, ',')"/>
          <xsl:with-param name="f" select="$f"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <td>
          <xsl:for-each select="$f/*">
            <xsl:text> </xsl:text>
            <xsl:variable name="visible" select="string-length(substring-before(concat(' ,', $hidden, ','), concat(',', name(), ','))) = 0"/>
            <xsl:if test="string-length(substring-before(concat(' ,', $columns, ','), concat(',', name(), ','))) = 0">
              <xsl:choose>
                <xsl:when test="$visible">
                  <xsl:value-of select="name()"/>
                </xsl:when>
                <xsl:otherwise>
                  <span class="hidden" title="{.}">
                    <xsl:value-of select="name()"/>
                  </span>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:if test="$visible">
                <xsl:text>:</xsl:text>
                <xsl:call-template name="value">
                  <xsl:with-param name="v" select="."/>
                </xsl:call-template>
              </xsl:if>
            </xsl:if>
          </xsl:for-each>
        </td>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="value">
    <xsl:param name="v"/>
    <xsl:choose>
      <xsl:when test="$v/v">
        <xsl:text>[</xsl:text>
        <xsl:for-each select="$v/v">
          <xsl:if test="position() &gt; 1">
            <xsl:text>, </xsl:text>
          </xsl:if>
          <xsl:call-template name="value">
            <xsl:with-param name="v" select="."/>
          </xsl:call-template>
        </xsl:for-each>
        <xsl:text>]</xsl:text>
      </xsl:when>
      <xsl:otherwise>
        <span>
          <xsl:attribute name="class">
            <xsl:value-of select="$v/@t"/>
          </xsl:attribute>
          <xsl:value-of select="$v"/>
        </span>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>
